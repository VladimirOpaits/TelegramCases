#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è TonKeeper –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏

–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç:
- –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤—ã–≤–æ–¥
- –ì–µ–Ω–µ—Ä–∞—Ü–∏—é QR-–∫–æ–¥–∞
- –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from ton_keeper_manager import tonkeeper_manager


async def example_withdrawal_process():
    """–ü—Ä–∏–º–µ—Ä –ø—Ä–æ—Ü–µ—Å—Å–∞ –≤—ã–≤–æ–¥–∞ TON —á–µ—Ä–µ–∑ TonKeeper"""
    print("üöÄ –ü—Ä–∏–º–µ—Ä –ø—Ä–æ—Ü–µ—Å—Å–∞ –≤—ã–≤–æ–¥–∞ TON —á–µ—Ä–µ–∑ TonKeeper\n")
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–≤–æ–¥–∞
    user_id = 12345
    amount_fantics = 1000  # 1000 —Ñ–∞–Ω—Ç–∏–∫–æ–≤
    amount_ton = 1.0       # 1 TON
    fee_amount = 0.01      # –ö–æ–º–∏—Å—Å–∏—è 0.01 TON
    destination_address = "EQD4FPq-PRDieyQKkizFTRtSDyucUIqrj0v_zXJmqaDp6_0t"
    withdrawal_id = 789
    
    print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID: {user_id}")
    print(f"üí∞ –°—É–º–º–∞: {amount_fantics} —Ñ–∞–Ω—Ç–∏–∫–æ–≤ = {amount_ton} TON")
    print(f"üí∏ –ö–æ–º–∏—Å—Å–∏—è: {fee_amount} TON")
    print(f"üìç –ê–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è: {destination_address}")
    print(f"üÜî ID –≤—ã–≤–æ–¥–∞: {withdrawal_id}\n")
    
    # –®–∞–≥ 1: –í–∞–ª–∏–¥–∞—Ü–∏—è TON –∞–¥—Ä–µ—Å–∞
    print("üîç –®–∞–≥ 1: –í–∞–ª–∏–¥–∞—Ü–∏—è TON –∞–¥—Ä–µ—Å–∞...")
    if tonkeeper_manager.validate_ton_address(destination_address):
        print("‚úÖ TON –∞–¥—Ä–µ—Å –≤–∞–ª–∏–¥–µ–Ω")
    else:
        print("‚ùå TON –∞–¥—Ä–µ—Å –Ω–µ–≤–∞–ª–∏–¥–µ–Ω")
        return
    
    # –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ QR-–∫–æ–¥–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
    print("\nüì± –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ QR-–∫–æ–¥–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞...")
    qr_result = tonkeeper_manager.create_withdrawal_qr(
        amount_ton=amount_ton,
        destination_address=destination_address,
        withdrawal_id=withdrawal_id,
        comment="Casino withdrawal"
    )
    
    if qr_result["success"]:
        print("‚úÖ QR-–∫–æ–¥ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        print(f"üîó Deep link: {qr_result['deep_link']}")
        print(f"üìÅ –§–∞–π–ª QR: {qr_result['qr_code']['filepath']}")
        
        # –®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ —Å–≤–æ–¥–∫–∏ –ø–æ –≤—ã–≤–æ–¥—É
        print("\nüìã –®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ —Å–≤–æ–¥–∫–∏ –ø–æ –≤—ã–≤–æ–¥—É...")
        summary = tonkeeper_manager.create_withdrawal_summary(
            withdrawal_id=withdrawal_id,
            amount_ton=amount_ton,
            destination_address=destination_address,
            fee_ton=fee_amount
        )
        
        print("üìä –°–≤–æ–¥–∫–∞ –ø–æ –≤—ã–≤–æ–¥—É:")
        print(summary)
        
        # –®–∞–≥ 4: –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print("\nüì± –®–∞–≥ 4: –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
        instructions = qr_result['instructions']
        print(instructions)
        
        # –®–∞–≥ 5: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ç–∏
        print("\nüåê –®–∞–≥ 5: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ç–∏ TON...")
        network_info = tonkeeper_manager.get_ton_network_info()
        print(f"–°–µ—Ç—å: {network_info['network']}")
        print(f"–ù–∞–∑–≤–∞–Ω–∏–µ: {network_info['name']}")
        print(f"–í–∞–ª—é—Ç–∞: {network_info['currency']}")
        print(f"Explorer: {network_info['explorer']}")
        
        print("\nüéâ –ü—Ä–æ—Ü–µ—Å—Å –≤—ã–≤–æ–¥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("üëÜ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å QR-–∫–æ–¥ –∏–ª–∏ deep link –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—ã–≤–æ–¥–∞ —á–µ—Ä–µ–∑ TonKeeper")
        
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è QR-–∫–æ–¥–∞: {qr_result['error']}")


async def example_multiple_withdrawals():
    """–ü—Ä–∏–º–µ—Ä –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤—ã–≤–æ–¥–æ–≤"""
    print("\n" + "="*60)
    print("üîÑ –ü—Ä–∏–º–µ—Ä –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤—ã–≤–æ–¥–æ–≤")
    print("="*60)
    
    withdrawals = [
        {"id": 1, "amount": 0.5, "address": "EQD4FPq-PRDieyQKkizFTRtSDyucUIqrj0v_zXJmqaDp6_0t", "comment": "Small withdrawal"},
        {"id": 2, "amount": 2.0, "address": "EQD4FPq-PRDieyQKkizFTRtSDyucUIqrj0v_zXJmqaDp6_0t", "comment": "Large withdrawal"},
        {"id": 3, "amount": 0.1, "address": "EQD4FPq-PRDieyQKkizFTRtSDyucUIqrj0v_zXJmqaDp6_0t", "comment": "Test withdrawal"}
    ]
    
    for withdrawal in withdrawals:
        print(f"\nüì§ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–≤–æ–¥–∞ #{withdrawal['id']}")
        print(f"üí∞ –°—É–º–º–∞: {withdrawal['amount']} TON")
        
        # –°–æ–∑–¥–∞–µ–º QR-–∫–æ–¥
        qr_result = tonkeeper_manager.create_withdrawal_qr(
            amount_ton=withdrawal['amount'],
            destination_address=withdrawal['address'],
            withdrawal_id=withdrawal['id'],
            comment=withdrawal['comment']
        )
        
        if qr_result["success"]:
            print(f"‚úÖ QR-–∫–æ–¥ —Å–æ–∑–¥–∞–Ω: {qr_result['qr_code']['filename']}")
            print(f"üîó Deep link: {qr_result['deep_link'][:50]}...")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {qr_result['error']}")


def example_manual_tonkeeper_usage():
    """–ü—Ä–∏–º–µ—Ä —Ä—É—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è TonKeeper (–±–µ–∑ QR-–∫–æ–¥–∞)"""
    print("\n" + "="*60)
    print("üì± –ü—Ä–∏–º–µ—Ä —Ä—É—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è TonKeeper")
    print("="*60)
    
    amount_ton = 1.5
    destination_address = "EQD4FPq-PRDieyQKkizFTRtSDyucUIqrj0v_zXJmqaDp6_0t"
    
    print(f"üí∞ –°—É–º–º–∞ –∫ –≤—ã–≤–æ–¥—É: {amount_ton} TON")
    print(f"üìç –ê–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è: {destination_address}")
    
    # –°–æ–∑–¥–∞–µ–º deep link –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞
    deep_link = tonkeeper_manager._create_tonkeeper_deep_link(
        amount_ton=amount_ton,
        destination_address=destination_address,
        comment="Manual withdrawal"
    )
    
    print(f"\nüîó Deep link –¥–ª—è TonKeeper:")
    print(deep_link)
    
    print(f"\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ TonKeeper")
    print("2. –ù–∞–∂–º–∏—Ç–µ '–û—Ç–ø—Ä–∞–≤–∏—Ç—å'")
    print("3. –í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è –≤—Ä—É—á–Ω—É—é")
    print("4. –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É: 1.5 TON")
    print("5. –î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: Manual withdrawal")
    print("6. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é")


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üé∞ –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è TonKeeper –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏\n")
    
    # –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞
    await example_withdrawal_process()
    
    # –ü—Ä–∏–º–µ—Ä –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –≤—ã–≤–æ–¥–æ–≤
    await example_multiple_withdrawals()
    
    # –ü—Ä–∏–º–µ—Ä —Ä—É—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    example_manual_tonkeeper_usage()
    
    print("\n" + "="*60)
    print("üéâ –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
    print("="*60)


if __name__ == "__main__":
    asyncio.run(main()) 